-- +goose Up
-- +goose StatementBegin

CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TYPE role AS ENUM ('admin', 'customer');

CREATE TABLE "users" (
     "id" SERIAL PRIMARY KEY NOT NULL,
     "email" varchar UNIQUE NOT NULL,
     "password_hash" varchar NOT NULL,
     "role" role NOT NULL
);

CREATE TABLE "customers" (
     "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
     "user_id" int NOT NULL,
     "username" varchar NOT NULL,
     "driver_license_number" varchar NOT NULL
);

ALTER TABLE "customers" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

CREATE TABLE "sessions" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "user_id" int NOT NULL,
    "refresh_token" varchar NOT NULL,
    "created_at" timestamp NOT NULL,
    "expires_at" timestamp NOT NULL,
    "revoked" boolean NOT NULL DEFAULT false
);

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

CREATE TYPE class_type AS ENUM ('economy', 'standard', 'comfort', 'business', 'suv', 'cargo');
CREATE TYPE fuel_type AS ENUM ('gas', 'diesel', 'electric');

CREATE TABLE "car_models" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "brand" varchar NOT NULL,
    "model" varchar NOT NULL,
    "class" class_type NOT NULL,
    "seats" int NOT NULL,
    "fuel_type" fuel_type NOT NULL
);

CREATE TYPE car_status AS ENUM ('available', 'rented');

CREATE TABLE "cars" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "vin" varchar UNIQUE NOT NULL,
    "year" int NOT NULL,
    "mileage" int NOT NULL,
    "status" car_status NOT NULL,
    "car_model_id" int NOT NULL,
    "location" geometry(Point, 4326) NOT NULL
);

ALTER TABLE "cars" ADD FOREIGN KEY ("car_model_id") REFERENCES "car_models" ("id") ON DELETE RESTRICT;

CREATE TYPE reservation_status AS ENUM ('active', 'completed', 'cancelled');

CREATE TABLE "reservations" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "customer_id" int NOT NULL,
    "car_id" int NOT NULL,
    "start_at" timestamp NOT NULL,
    "end_at" timestamp NOT NULL,
    "start_location" geometry(Point, 4326) NOT NULL,
    "end_location" geometry(Point, 4326) NOT NULL,
    "total_price" decimal(10, 2) NOT NULL,
    "status" reservation_status NOT NULL
);

ALTER TABLE "reservations" ADD FOREIGN KEY ("customer_id") REFERENCES "customers" ("id") ON DELETE CASCADE;

ALTER TABLE "reservations" ADD FOREIGN KEY ("car_id") REFERENCES "cars" ("id") ON DELETE CASCADE;

CREATE TYPE availability AS ENUM ('allowed', 'forbidden', 'parking');

CREATE TABLE "zones" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "name" varchar NOT NULL,
    "availability" availability NOT NULL,
    "boundary_geo" geometry(POLYGON, 4326) NOT NULL,
    "city" varchar NOT NULL
);

CREATE TABLE "zone_assignments" (
    "id" SERIAL PRIMARY KEY NOT NULL,
    "car_id" int NOT NULL,
    "zone_id" int NOT NULL,
    "assigned_at" timestamp NOT NULL
);

ALTER TABLE "zone_assignments" ADD FOREIGN KEY ("car_id") REFERENCES "cars" ("id") ON DELETE CASCADE;

ALTER TABLE "zone_assignments" ADD FOREIGN KEY ("zone_id") REFERENCES "zones" ("id") ON DELETE CASCADE;

-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin

DROP TABLE "zone_assignments";

DROP TABLE "zones";

DROP TABLE "reservations";

DROP TABLE "cars";

DROP TABLE "car_models";

DROP TABLE "sessions";

DROP TABLE "customers";

DROP TABLE "users";

DROP TYPE IF EXISTS reservation_status;

DROP TYPE IF EXISTS car_status;

DROP TYPE IF EXISTS class_type;

DROP TYPE IF EXISTS fuel_type;

DROP TYPE IF EXISTS availability;

DROP TYPE IF EXISTS role;

-- +goose StatementEnd
